'use client';

import { Modal } from '@ek-components';
import { ModalContextProvider } from '@ek-components/Modal/ModalContext';
import type { Metadata } from 'next';
import { Inter } from 'next/font/google';
import './globals.css';
import { theme } from '@ek-components/theme';
import {
  useQuery,
  useMutation,
  useQueryClient,
  QueryClient,
  QueryClientProvider,
} from '@tanstack/react-query';
import { ThemeProvider } from '@emotion/react';
import { AlertContextProvider } from '@ek-components/Alert/AlertContext';
import { AlertComponent } from '@ek-components/Alert';
import { AuthProvider } from '@ek-components/Auth';
import { Provider } from 'react-redux';
import store from '@ek-components/redux/store';

const inter = Inter({ subsets: ['latin'] });
const queryClient = new QueryClient();

const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang='en'>
      <QueryClientProvider client={queryClient}>
        <Provider store={store}>
          <AuthProvider>
            <AlertContextProvider>
              <ThemeProvider theme={theme}>
                {/* <Layout> */}
                <ModalContextProvider>
                  <Modal />
                  <AlertComponent />
                  <body className={inter.className}>{children}</body>
                </ModalContextProvider>
                {/* </Layout> */}
              </ThemeProvider>
            </AlertContextProvider>
          </AuthProvider>
        </Provider>
      </QueryClientProvider>
    </html>
  );
}
